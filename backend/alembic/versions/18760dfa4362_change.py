"""change

Revision ID: 18760dfa4362
Revises: eb327a4a2704
Create Date: 2025-05-06 13:51:32.259718

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '18760dfa4362'
down_revision: Union[str, None] = 'eb327a4a2704'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('accounts', sa.Column('account__balance', sa.Float(), nullable=False))
    op.drop_constraint('accounts_user_id_fkey', 'accounts', type_='foreignkey')
    op.create_foreign_key(None, 'accounts', 'users', ['user_id'], ['user_id'])
    op.drop_column('accounts', 'account_balance')
    op.drop_constraint('devices_user_id_fkey', 'devices', type_='foreignkey')
    op.create_foreign_key(None, 'devices', 'users', ['user_id'], ['user_id'])
    op.drop_constraint('fraud_details_transaction_id_fkey', 'fraud_details', type_='foreignkey')
    op.create_foreign_key(None, 'fraud_details', 'transactions', ['transaction_id'], ['transaction_id'])
    op.drop_constraint('risk_assessments_transaction_id_fkey', 'risk_assessments', type_='foreignkey')
    op.create_foreign_key(None, 'risk_assessments', 'transactions', ['transaction_id'], ['transaction_id'])
    op.drop_constraint('transaction_metrics_user_id_fkey', 'transaction_metrics', type_='foreignkey')
    op.create_foreign_key(None, 'transaction_metrics', 'users', ['user_id'], ['user_id'])
    op.drop_constraint('transactions_origin_location_id_fkey', 'transactions', type_='foreignkey')
    op.drop_constraint('transactions_device_id_fkey', 'transactions', type_='foreignkey')
    op.drop_constraint('transactions_beneficiary_location_id_fkey', 'transactions', type_='foreignkey')
    op.drop_constraint('transactions_account_id_fkey', 'transactions', type_='foreignkey')
    op.drop_constraint('transactions_user_id_fkey', 'transactions', type_='foreignkey')
    op.create_foreign_key(None, 'transactions', 'devices', ['device_id'], ['device_id'])
    op.create_foreign_key(None, 'transactions', 'users', ['user_id'], ['user_id'])
    op.create_foreign_key(None, 'transactions', 'locations', ['origin_location_id'], ['location_id'])
    op.create_foreign_key(None, 'transactions', 'locations', ['beneficiary_location_id'], ['location_id'])
    op.drop_column('transactions', 'account_id')
    op.add_column('users', sa.Column('last_ip', sa.String(), nullable=True))
    op.add_column('users', sa.Column('current_ip', sa.String(), nullable=True))
    op.add_column('users', sa.Column('account_balance', sa.Float(), nullable=False))
    op.alter_column('users', 'aadhar_card',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'pan_card',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('users', 'gender')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('gender', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('users', 'pan_card',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'aadhar_card',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('users', 'account_balance')
    op.drop_column('users', 'current_ip')
    op.drop_column('users', 'last_ip')
    op.add_column('transactions', sa.Column('account_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.create_foreign_key('transactions_user_id_fkey', 'transactions', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.create_foreign_key('transactions_account_id_fkey', 'transactions', 'accounts', ['account_id'], ['account_id'], ondelete='CASCADE')
    op.create_foreign_key('transactions_beneficiary_location_id_fkey', 'transactions', 'locations', ['beneficiary_location_id'], ['location_id'], ondelete='CASCADE')
    op.create_foreign_key('transactions_device_id_fkey', 'transactions', 'devices', ['device_id'], ['device_id'], ondelete='CASCADE')
    op.create_foreign_key('transactions_origin_location_id_fkey', 'transactions', 'locations', ['origin_location_id'], ['location_id'], ondelete='CASCADE')
    op.drop_constraint(None, 'transaction_metrics', type_='foreignkey')
    op.create_foreign_key('transaction_metrics_user_id_fkey', 'transaction_metrics', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.drop_constraint(None, 'risk_assessments', type_='foreignkey')
    op.create_foreign_key('risk_assessments_transaction_id_fkey', 'risk_assessments', 'transactions', ['transaction_id'], ['transaction_id'], ondelete='CASCADE')
    op.drop_constraint(None, 'fraud_details', type_='foreignkey')
    op.create_foreign_key('fraud_details_transaction_id_fkey', 'fraud_details', 'transactions', ['transaction_id'], ['transaction_id'], ondelete='CASCADE')
    op.drop_constraint(None, 'devices', type_='foreignkey')
    op.create_foreign_key('devices_user_id_fkey', 'devices', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.add_column('accounts', sa.Column('account_balance', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'accounts', type_='foreignkey')
    op.create_foreign_key('accounts_user_id_fkey', 'accounts', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.drop_column('accounts', 'account__balance')
    # ### end Alembic commands ###
